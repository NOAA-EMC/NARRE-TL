#!/bin/sh
set -xa

#########################################
# NARRE ensprod
# 10/17/2011 Binbin Zhou, modified from Jun Du's SREF job
# 12/15/2011 Xiaoxue Wang, modified to NCO/EMC template
# 12/10/2012 Binbin Zhou, moved to WCOSS
# 12/10/2012 Binbin Zhou, moved to WCOSS
#########################################

######################################################
# The following two variable could be defined in the
# loadleveler submission script (the sms script), if
# not they will take the default values which is set
# for the NCO running enviroment
#######################################################
export RUN_ENVIR=${RUN_ENVIR:-nco}
export SENDECF=${SENDECF:-YES}

###################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-rap}
export RUN=${RUN:-narre}


###############################################################
# This block can be modified for different Production test
# environment. This is used for operational testings
###############################################################
if [ "$RUN_ENVIR" != nco ]; then
  typeset -Z2 cyc
  export cyc=$1
  export envir=dev
  export DATA=/gpfs/hps3/ptmp/Binbin.Zhou/narre/tmpnwprd1/narre_${cyc}_${envir}
  export DATA_IN=/gpfs/hps3/ptmp/Binbin.Zhou/narre/tmpnwprd1/narre_${cyc}_${envir}/misc
  export jlogfile=$DATA/jlogfile
  export HOMEnarre=/gpfs/dell2/emc/verification/noscrub/Binbin.Zhou/narre.${model_ver}
  export COMOUT=/gpfs/hps3/ptmp/Binbin.Zhou/narre/com/${NET}/${envir}/${RUN}.${PDY}/ensprod
fi

export PS4='$SECONDS + ' 
date

#########################################
# obtain unique process id (pid) and make temp directories
#########################################
export pid=$$
export DATA=${DATA:-$DATAROOT/narre_${cyc}_${envir}}
export DATA_IN=${DATA_IN:-$DATAROOT/narre_${cyc}_${envir}/misc}
mkdir -p $DATA/ensprod $DATA_IN

cd $DATA/ensprod

export cycle=t${cyc}z 
export MP_HOLDTIME=1000
export MP_LABELIO=YES

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-${DATA}/jlogfile.${job}.${pid}}

####################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy files to /com directory
####################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}

####################################
# Specify Execution Areas
####################################
export narre_ver=${narre_ver:-v1.1.0} 
export HOMEnarre=${HOMEnarre:-$NWROOT/${RUN}.${narre_ver}}
export EXECnarre=${EXECnarre:-${HOMEnarre}/exec}
export FIXnarre=${FIXnarre:-$HOMEnarre/fix}
export PARMnarre=${PARMnarre:-$HOMEnarre/parm}
export USHnarre=${USHnarre:-$HOMEnarre/ush}
export SCRIPTSnarre=${SCRIPTSnarre:-$HOMEnarre/scripts}

msg="JOB $job HAS BEGUN"
postmsg "$jlogfile" "$msg"

###############################
# Run setpdy and initialize PDY variables
################################
setpdy.sh
. ./PDY

##############################################
# Define COM directories
##############################################
export COMOUT=${COMOUT:-$COMROOT/${NET}/${envir}/${RUN}.${PDY}/ensprod}
########################################################

mkdir -p $COMOUT

#######################################################
# Pass information which is needed to run the Script
#######################################################

export VERBOSE=YES

env

###################################################
# Execute the Scripts
# Run product generator
###################################################
mkdir -m 775 $DATA/ensprod/130
mkdir -m 775 $DATA/ensprod/242
rm -f poescript
echo "$SCRIPTSnarre/exnarre_ensprod.sh.ecf 130 > $DATA/ensprod/130.out 2>&1" >> poescript
echo "$SCRIPTSnarre/exnarre_ensprod.sh.ecf 242 > $DATA/ensprod/242.out 2>&1" >> poescript

chmod 775 poescript
export MP_PGMMODEL=mpmd
export MP_CMDFILE=poescript

#
# Execute the script.
#mpirun.lsf -cmdfile poescript -pgmmodel mpmd -labelio yes -stdoutmode ordered
mpirun cfp poescript
export err=$?; err_chk

#mkdir -m 775 $DATA/ensprod/130
#$SCRIPTSnarre/exnarre_ensprod.sh.ecf 130 > $DATA/ensprod/130.out 2>&1 &
#mkdir -m 775 $DATA/ensprod/242
#$SCRIPTSnarre/exnarre_ensprod.sh.ecf 242 >  $DATA/ensprod/242.out 2>&1 &


set +x
echo "######################################"
echo "  ENS130.OUT "
echo "######################################"
set -x
cat $DATA/ensprod/130.out

set +x
echo "######################################"
echo "  ENS242.OUT "
echo "######################################"
set -x
cat $DATA/ensprod/242.out

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$jlogfile" "$msg"

cd $DATAROOT
if [ $KEEPDATA -eq NO ]; then
  rm -rf $DATA
fi
date
